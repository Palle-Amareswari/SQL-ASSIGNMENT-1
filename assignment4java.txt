1.
public class Employee {
long employeeId;
String employeeName;
double employeeSalary;
//generate compareTo and hashcode methods 
Employee(long employeeId, String employeeName,double employeeSalary)
{
    this.employeeId=employeeId;
    this.employeeName=employeeName;
    this.employeeSalary=employeeSalary;
}
public int compareTo(Employee e) {
	return 0;
}
}

*public interface EmployeeInt {
	
	public void addEmployee(Employee e) throws DuplicateEmployeeIdException;
    public void deleteEmployee(Employee e);
    public double yearSalary(Employee e1);
    public double appSalary(Employee e1);
}

*import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class EmployeeImp implements EmployeeInt{
    List<Employee> listOfEmployee =new ArrayList<Employee>();
    public void addEmployee(Employee e) throws DuplicateEmployeeIdException
    {
        for(Employee e1:listOfEmployee)
        {
            if(e1.compareTo(e)==0)
             throw new DuplicateEmployeeIdException("Duplicate employee is found");
        }
          
        listOfEmployee.add(e);
    }
    public void deleteEmployee(Employee e)
    {
        listOfEmployee.remove(e);
    }
    public double yearSalary(Employee e1){
        return e1.employeeSalary*12;
    }
    public double appSalary(Employee e1)
    {
        if(e1.employeeSalary<10000)
         e1.employeeSalary+=5000;
        return e1.employeeSalary;
    }
} 

class DuplicateEmployeeIdException extends Exception{
    public DuplicateEmployeeIdException(String message)
    {
        super(message);
    }
}

*public class UserEmployee {
	
	public static void main(String[] args) {
			try{
			    Employee e1=new Employee(1221,"rama",5000);
			Employee e2=new Employee(1222,"revathi",15000);
			Employee e3=new Employee(1223,"deva",27000);
			Employee e4=new Employee(1224,"prabha",30000);
			
			EmployeeImp employee=new EmployeeImp();
			
			employee.addEmployee(e2);
			employee.addEmployee(e3);
			employee.addEmployee(e4);
			System.out.println("After adding all employees employee list is:");
			System.out.println(employee.listOfEmployee);
			employee.deleteEmployee(e3);
			System.out.println("After deleting 3rd employee employee list is:");
			System.out.println(employee.listOfEmployee);
			System.out.println("montly salary of 1st employee is : "+employee.appSalary(e1));
			System.out.println("yearly salary of 4th employee is : "+employee.yearSalary(e4));
			Employee e5=new Employee(10000001,"jyosh",78000);
			employee.addEmployee(e5);
			}
			catch(Exception e)
		    {
		        System.out.println(e.getMessage());
		    }
			
			
		}
	}



2.
public class Student implements Comparable
	{
	  String studentName;
	  int studentTotalMarks;
	    Student (String strudentName, int studentTotalMarks)
	  {
	    this.studentName = strudentName;
	    this.studentTotalMarks = studentTotalMarks;
	  }
	  //generate compareTo and hashcode , toString methods based on studentTotalMarks
		@Override
		public int compareTo(Object o) {
			// TODO Auto-generated method stub
			return 0;
		}
	}


*import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Main {
	 public static void main (String[]args)
	  {
	    Student s1 = new Student ("A", 70);
	    Student s2 = new Student ("B", 80);
	    Student s3 = new Student ("C", 90);
	    Student s4 = new Student ("D", 77);
	    Student s5=new Student("E", 66);
	    List<Student> list=new ArrayList<Student>();
	    list.add(s1);
	    list.add(s2);
	    list.add(s3);
	    list.add(s4);
	    list.add(s5);
	    Collections.sort(list,Collections.reverseOrder());
	    list.forEach(System.out::println);
	       
	  }
	}


